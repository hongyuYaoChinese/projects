<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhy.oauthserver.user.dao.SystemModelMapper">
	<resultMap id="BaseResultMap"
		type="com.yhy.oauthserver.user.pojo.SystemModel">
		<result column="system_model_id" jdbcType="VARCHAR"
			property="systemModelId" />
		<result column="parent_model_id" jdbcType="VARCHAR"
			property="parentModelId" />
		<result column="model_name" jdbcType="VARCHAR"
			property="modelName" />
		<result column="model_describe" jdbcType="VARCHAR"
			property="modelDescribe" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="create_user" jdbcType="VARCHAR"
			property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="update_user" jdbcType="VARCHAR"
			property="updateUser" />
		<result column="model_url" jdbcType="VARCHAR"
			property="modelUrl" />
	</resultMap>
	<insert id="insert"
		parameterType="com.yhy.oauthserver.user.pojo.SystemModel">
		insert into system_model (system_model_id, model_name, model_describe,
		create_time, create_user, update_time,
		update_user,model_url)
		values (#{systemModelId,jdbcType=VARCHAR}, #{modelName,jdbcType=VARCHAR},
		#{modelDescribe,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=VARCHAR}, #{modelUrl,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.yhy.oauthserver.user.pojo.SystemModel">
		insert into system_model
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="systemModelId != null">
				system_model_id,
			</if>
			<if test="modelName != null">
				model_name,
			</if>
			<if test="modelDescribe != null">
				model_describe,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="modelUrl != null">
				model_url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="systemModelId != null">
				#{systemModelId,jdbcType=VARCHAR},
			</if>
			<if test="modelName != null">
				#{modelName,jdbcType=VARCHAR},
			</if>
			<if test="modelDescribe != null">
				#{modelDescribe,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="modelUrl != null">
				#{modelUrl,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<delete id="deleteModelByid" parameterType="String">
		DELETE
		FROM
		system_model
		WHERE
		system_model_id = #{modelId}
	</delete>

	<delete id="deleteModelInfoByid" parameterType="String">
		DELETE
		FROM
		model_rel_url
		WHERE
		model_id = #{modelId}
	</delete>

	<delete id="deleteModelRoleInfoByid" parameterType="String">
		DELETE
		FROM
		role_rel_model
		WHERE
		model_id = #{modelId}
	</delete>

	<update id="updateModelInfo" parameterType="Map">
		UPDATE system_model
SET model_url = #{modelUrl},
 model_name =  #{modelName},
 model_describe =  #{modelDescribe},
 update_user =  #{updateUser},
 update_time =  now()
WHERE
	system_model_id =  #{modelId}
	</update>
</mapper>